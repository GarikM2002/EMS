@page "/login"
@inject AuthService AuthService
@inject NavigationManager Navigation
@rendermode InteractiveServer

<MudPaper Width="400px" Class="pa-4 mx-auto mt-12">
    <MudText Typo="Typo.h4" Class="mb-4">Login</MudText>
    <MudForm @ref="form" @OnValidSubmit="HandleLogin">
        <MudTextField @bind-Value="loginRequest.Email" Label="Email" Required="true" Type="email" />
        <MudTextField @bind-Value="loginRequest.Password" Label="Password" Required="true" Type="password" />
        <MudButton Color="Color.Primary" Variant="Variant.Filled" Type="submit">Login</MudButton>
    </MudForm>
    @if (errorMessage != null)
    {
        <MudText Color="Color.Error" Class="mt-2">@errorMessage</MudText>
    }
</MudPaper>

@code {
    private MudForm form;
    private LoginViewModel loginRequest = new();
    private string errorMessage;

    private async Task HandleLogin()
    {
        var response = await AuthService.LoginAsync(loginRequest);
        if (response.IsSuccessStatusCode)
        {
            var token = await response.Content.ReadAsStringAsync();
            // Store the token as needed, e.g., in local storage
            Navigation.NavigateTo("/");
        }
        else
        {
            errorMessage = "Invalid login attempt";
        }
    }
}
